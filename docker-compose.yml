version: '3'

services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      - POSTGRES_DATABSE=instagram
      - POSTGRES_DB=instagram
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=example
    volumes:
    - db-data:/var/lib/postgresql/data
    ports:
    - "54320:5432"
    network_mode: bridge
   
  azure-storage:
    image: arafato/azurite
    container_name: azurite
    network_mode: bridge
    environment:
      - executable=blob
    ports:
      - 10000-10000
      - 10001-10001
      - 10002-10002

  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.apigateway
    image: api-gateway
    env_file: ./packages/api-gateway/.env
    environment:
      - PG_ADDRESS=postgres_db
      - PG_PORT=5432
      - USER_SERVICE=user-service
      - POST_SERVICE=post-service
      - IMAGE_SERVICE=image-service
    ports:
      - "5000:5000"
    network_mode: bridge
    links:
      - postgres

  user-service:
    container_name: user-service
    build:
      context: .
      dockerfile: Dockerfile.userservice
    image: user-service
    environment:
      - PG_ADDRESS=postgres_db
      - PG_PORT=5432
    ports:
      - "5001:5001"
    network_mode: bridge
    links:
      - postgres    
  
  image-service:
    container_name: image-service
    build:
      context: .
      dockerfile: Dockerfile.imageservice
    image: image-service
    environment:
      - PG_ADDRESS=postgres_db
      - PG_PORT=5432
    ports:
      - "5002:5002"
    network_mode: bridge
    links:
      - postgres          

  post-service:
    container_name: post-service
    build:
      context: .
      dockerfile: Dockerfile.postservice
    image: post-service
    environment:
      - PG_ADDRESS=postgres_db
      - PG_PORT=5432
    ports:
      - "5003:5003"
    network_mode: bridge
    links:
      - postgres  
      - azure-storage  


volumes:
  db-data:
    driver: local